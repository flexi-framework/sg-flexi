diff -ur ./ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.cxx ../paraview/ParaView-v5.3.0/ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.cxx
--- ./ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.cxx	2017-03-10 20:22:48.000000000 +0100
+++ ../paraview/ParaView-v5.3.0/ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.cxx	2017-04-07 09:33:42.008803318 +0200
@@ -27,6 +27,9 @@
   : // sequence ending with numbers.
   reg_ex(new vtksys::RegularExpression("^(.*)\\.([0-9.]+)$"))
   ,
+  // sequence ending with extension (dual 000.001) . 
+  reg_ex22(new vtksys::RegularExpression("^(.*)(\\.|_|-)([0-9.]+)\\.([0-9.]+)\\.(.*)$"))
+  ,
   // sequence ending with extension.
   reg_ex2(new vtksys::RegularExpression("^(.*)(\\.|_|-)([0-9.]+)\\.(.*)$"))
   ,
@@ -55,6 +58,7 @@
 {
   delete this->reg_ex;
   delete this->reg_ex2;
+  delete this->reg_ex22;
   delete this->reg_ex3;
   delete this->reg_ex4;
   delete this->reg_ex5;
@@ -73,6 +77,12 @@
     this->SequenceIndex = atoi(reg_ex->match(2).c_str());
     match = true;
   }
+  else if (this->reg_ex22->find(file)) 
+  { 
+    this->SetSequenceName(std::string(this->reg_ex22->match(1) + this->reg_ex22->match(2) + ".." + this->reg_ex22->match(5)).c_str()); 
+    this->SequenceIndex = atoi((reg_ex22->match(3) + reg_ex22->match(4)).c_str()); 
+    match = true; 
+  } 
   else if (this->reg_ex2->find(file))
   {
     this->SetSequenceName(std::string(this->reg_ex2->match(1) + this->reg_ex2->match(2) + ".." +
diff -ur ./ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.h ../paraview/ParaView-v5.3.0/ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.h
--- ./ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.h	2017-03-10 20:22:48.000000000 +0100
+++ ../paraview/ParaView-v5.3.0/ParaViewCore/VTKExtensions/Default/vtkFileSequenceParser.h	2017-04-07 09:30:36.429704823 +0200
@@ -57,6 +57,7 @@
   ~vtkFileSequenceParser();
 
   vtksys::RegularExpression* reg_ex;
+  vtksys::RegularExpression* reg_ex22;
   vtksys::RegularExpression* reg_ex2;
   vtksys::RegularExpression* reg_ex3;
   vtksys::RegularExpression* reg_ex4;
Only in .: paraview_patch
